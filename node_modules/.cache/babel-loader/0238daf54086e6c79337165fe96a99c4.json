{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\website\\\\src\\\\pages\\\\register\\\\Register.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Container, Alert, Button, FormGroup, InputGroup, InputGroupAddon, InputGroupText, Input, Label } from 'reactstrap';\nimport Widget from '../../components/Widget';\nimport { registerUser, registerError } from '../../actions/register';\nimport microsoft from '../../assets/microsoft.png';\nimport Login from '../login';\n\nvar Register = /*#__PURE__*/function (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n    _this.doRegister = _this.doRegister.bind(_assertThisInitialized(_this));\n    _this.changeEmail = _this.changeEmail.bind(_assertThisInitialized(_this));\n    _this.changePassword = _this.changePassword.bind(_assertThisInitialized(_this));\n    _this.changeConfirmPassword = _this.changeConfirmPassword.bind(_assertThisInitialized(_this));\n    _this.checkPassword = _this.checkPassword.bind(_assertThisInitialized(_this));\n    _this.isPasswordValid = _this.isPasswordValid.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"changeEmail\",\n    value: function changeEmail(event) {\n      this.setState({\n        email: event.target.value\n      });\n    }\n  }, {\n    key: \"changePassword\",\n    value: function changePassword(event) {\n      this.setState({\n        password: event.target.value\n      });\n    }\n  }, {\n    key: \"changeConfirmPassword\",\n    value: function changeConfirmPassword(event) {\n      this.setState({\n        confirmPassword: event.target.value\n      });\n    }\n  }, {\n    key: \"checkPassword\",\n    value: function checkPassword() {\n      var _this2 = this;\n\n      if (!this.isPasswordValid()) {\n        if (!this.state.password) {\n          this.props.dispatch(registerError(\"Password field is empty\"));\n        } else {\n          this.props.dispatch(registerError(\"Passwords are not equal\"));\n        }\n\n        setTimeout(function () {\n          _this2.props.dispatch(registerError());\n        }, 3 * 1000);\n      }\n    }\n  }, {\n    key: \"isPasswordValid\",\n    value: function isPasswordValid() {\n      return this.state.password && this.state.password === this.state.confirmPassword;\n    }\n  }, {\n    key: \"doRegister\",\n    value: function doRegister(e) {\n      e.preventDefault();\n\n      if (!this.isPasswordValid()) {\n        this.checkPassword();\n      } else {\n        this.props.dispatch(registerUser({\n          creds: {\n            email: this.state.email,\n            password: this.state.password\n          },\n          history: this.props.history\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _ref = this.props.location.state || {\n        from: {\n          pathname: '/app'\n        }\n      },\n          from = _ref.from; // eslint-disable-line\n      // cant access login page while logged in\n\n\n      if (Login.isAuthenticated(JSON.parse(localStorage.getItem('authenticated')))) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: from,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"auth-page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Widget, {\n        className: \"widget-auth mx-auto\",\n        title: /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"mt-0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 68\n          }\n        }, \"Login to your Web App\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"widget-auth-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, \"Please fill all fields below.\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.doRegister,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }, this.props.errorMessage && /*#__PURE__*/React.createElement(Alert, {\n        className: \"alert-sm widget-middle-overflow rounded-0\",\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }\n      }, this.props.errorMessage), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"mt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 33\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-no-border\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"la la-user text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Input, {\n        id: \"email\",\n        className: \"input-transparent pl-3\",\n        value: this.state.email,\n        onChange: this.changeEmail,\n        type: \"email\",\n        required: true,\n        name: \"email\",\n        placeholder: \"Email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 33\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-no-border\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"la la-lock text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Input, {\n        id: \"password\",\n        className: \"input-transparent pl-3\",\n        value: this.state.password,\n        onChange: this.changePassword,\n        type: \"password\",\n        required: true,\n        name: \"password\",\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"confirmPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }\n      }, \"Confirm\"), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-no-border\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"la la-lock text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(Input, {\n        id: \"confirmPassword\",\n        className: \"input-transparent pl-3\",\n        value: this.state.confirmPassword,\n        onChange: this.changeConfirmPassword,\n        onBlur: this.checkPassword,\n        type: \"password\",\n        required: true,\n        name: \"confirmPassword\",\n        placeholder: \"Confirm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bg-widget-transparent auth-widget-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        color: \"danger\",\n        className: \"auth-btn\",\n        size: \"sm\",\n        style: {\n          color: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 33\n        }\n      }, this.props.isFetching ? 'Loading...' : 'Register'), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"widget-auth-info mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 33\n        }\n      }, \"Already have the account? Login now!\"), /*#__PURE__*/React.createElement(Link, {\n        className: \"d-block text-center mb-4\",\n        to: \"login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }\n      }, \"Enter the account\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"social-buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        className: \"social-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"social-icon social-google\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"social-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 41\n        }\n      }, \"GOOGLE\")), /*#__PURE__*/React.createElement(Button, {\n        color: \"success\",\n        className: \"social-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"social-icon social-microsoft\",\n        style: {\n          backgroundImage: \"url(\".concat(microsoft, \")\")\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"social-text\",\n        style: {\n          color: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 41\n        }\n      }, \"MICROSOFT\"))))))), /*#__PURE__*/React.createElement(\"footer\", {\n        className: \"auth-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }, new Date().getFullYear(), \" \\xA9 Light Blue Template - React Admin Dashboard Template Made by \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://flatlogic.com\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 112\n        }\n      }, \"Flatlogic LLC\"), \".\"));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\n_defineProperty(Register, \"propTypes\", {\n  dispatch: PropTypes.func.isRequired\n});\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.register.isFetching,\n    errorMessage: state.register.errorMessage\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Register));","map":{"version":3,"names":["React","PropTypes","withRouter","Redirect","Link","connect","Container","Alert","Button","FormGroup","InputGroup","InputGroupAddon","InputGroupText","Input","Label","Widget","registerUser","registerError","microsoft","Login","Register","props","state","email","password","confirmPassword","doRegister","bind","changeEmail","changePassword","changeConfirmPassword","checkPassword","isPasswordValid","event","setState","target","value","dispatch","setTimeout","e","preventDefault","creds","history","location","from","pathname","isAuthenticated","JSON","parse","localStorage","getItem","errorMessage","color","isFetching","backgroundImage","Date","getFullYear","Component","func","isRequired","mapStateToProps","register"],"sources":["C:/Users/Vladislav/Desktop/SmartCitySirius/website/src/pages/register/Register.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter, Redirect, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Alert, Button, FormGroup, InputGroup, InputGroupAddon, InputGroupText, Input, Label } from 'reactstrap';\r\nimport Widget from '../../components/Widget';\r\nimport { registerUser, registerError } from '../../actions/register';\r\nimport microsoft from '../../assets/microsoft.png';\r\nimport Login from '../login';\r\n\r\nclass Register extends React.Component {\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        };\r\n\r\n        this.doRegister = this.doRegister.bind(this);\r\n        this.changeEmail = this.changeEmail.bind(this);\r\n        this.changePassword = this.changePassword.bind(this);\r\n        this.changeConfirmPassword = this.changeConfirmPassword.bind(this);\r\n        this.checkPassword = this.checkPassword.bind(this);\r\n        this.isPasswordValid = this.isPasswordValid.bind(this);\r\n    }\r\n\r\n    changeEmail(event) {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    changePassword(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    changeConfirmPassword(event) {\r\n        this.setState({confirmPassword: event.target.value});\r\n    }\r\n\r\n    checkPassword() {\r\n        if (!this.isPasswordValid()) {\r\n            if (!this.state.password) {\r\n                this.props.dispatch(registerError(\"Password field is empty\"));\r\n            } else {\r\n                this.props.dispatch(registerError(\"Passwords are not equal\"));\r\n            }\r\n            setTimeout(() => {\r\n                this.props.dispatch(registerError());\r\n            }, 3 * 1000)\r\n        }\r\n    }\r\n\r\n    isPasswordValid() {\r\n       return this.state.password && this.state.password === this.state.confirmPassword;\r\n    }\r\n\r\n    doRegister(e) {\r\n        e.preventDefault();\r\n        if (!this.isPasswordValid()) {\r\n            this.checkPassword();\r\n        } else {\r\n            this.props.dispatch(registerUser({\r\n                creds: {\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                },\r\n                history: this.props.history\r\n            }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {from} = this.props.location.state || {from: {pathname: '/app'}}; // eslint-disable-line\r\n\r\n        // cant access login page while logged in\r\n        if (Login.isAuthenticated(JSON.parse(localStorage.getItem('authenticated')))) {\r\n            return (\r\n                <Redirect to={from}/>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"auth-page\">\r\n                <Container>\r\n                    <Widget className=\"widget-auth mx-auto\" title={<h3 className=\"mt-0\">Login to your Web App</h3>}>\r\n                        <p className=\"widget-auth-info\">\r\n                            Please fill all fields below.\r\n                        </p>\r\n                        <form onSubmit={this.doRegister}>\r\n                            {\r\n                                this.props.errorMessage && (\r\n                                    <Alert className=\"alert-sm widget-middle-overflow rounded-0\" color=\"danger\">\r\n                                        {this.props.errorMessage}\r\n                                    </Alert>\r\n                                )\r\n                            }\r\n                            <FormGroup className=\"mt\">\r\n                                <Label for=\"email\">Email</Label>\r\n                                <InputGroup className=\"input-group-no-border\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"la la-user text-white\"/>\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input id=\"email\" className=\"input-transparent pl-3\" value={this.state.email}\r\n                                           onChange={this.changeEmail} type=\"email\"\r\n                                           required name=\"email\" placeholder=\"Email\"/>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"password\">Password</Label>\r\n                                <InputGroup className=\"input-group-no-border\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"la la-lock text-white\"/>\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input id=\"password\" className=\"input-transparent pl-3\" value={this.state.password}\r\n                                           onChange={this.changePassword} type=\"password\"\r\n                                           required name=\"password\" placeholder=\"Password\"/>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"confirmPassword\">Confirm</Label>\r\n                                <InputGroup className=\"input-group-no-border\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"la la-lock text-white\"/>\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input id=\"confirmPassword\" className=\"input-transparent pl-3\" value={this.state.confirmPassword}\r\n                                           onChange={this.changeConfirmPassword} onBlur={this.checkPassword} type=\"password\"\r\n                                           required name=\"confirmPassword\" placeholder=\"Confirm\"/>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <div className=\"bg-widget-transparent auth-widget-footer\">\r\n                                <Button type=\"submit\" color=\"danger\" className=\"auth-btn\"\r\n                                        size=\"sm\" style={{color: '#fff'}}>{this.props.isFetching ? 'Loading...' : 'Register'}</Button>\r\n                                <p className=\"widget-auth-info mt-4\">\r\n                                    Already have the account? Login now!\r\n                                </p>\r\n                                <Link className=\"d-block text-center mb-4\" to=\"login\">Enter the account</Link>\r\n                                <div className=\"social-buttons\">\r\n                                    <Button color=\"primary\" className=\"social-button\">\r\n                                        <i className=\"social-icon social-google\"/>\r\n                                        <p className=\"social-text\">GOOGLE</p>\r\n                                    </Button>\r\n                                    <Button color=\"success\" className=\"social-button\">\r\n                                        <i className=\"social-icon social-microsoft\"\r\n                                           style={{backgroundImage: `url(${microsoft})`}}/>\r\n                                        <p className=\"social-text\" style={{color: '#fff'}}>MICROSOFT</p>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Widget>\r\n                    {/*<Widget className=\"widget-auth mx-auto\" title={<h3 className=\"mt-0\">Create an account</h3>}>*/}\r\n                        {/*<p className=\"widget-auth-info\">*/}\r\n                            {/*Please fill all fields below*/}\r\n                        {/*</p>*/}\r\n                        {/*<form className=\"mt\" onSubmit={this.doRegister}>*/}\r\n                            {/*{*/}\r\n                                {/*this.props.errorMessage && (*/}\r\n                                    {/*<Alert className=\"alert-sm\" color=\"danger\">*/}\r\n                                        {/*{this.props.errorMessage}*/}\r\n                                    {/*</Alert>*/}\r\n                                {/*)*/}\r\n                            {/*}*/}\r\n                            {/*<div className=\"form-group\">*/}\r\n                                {/*<input className=\"form-control no-border\" value={this.state.email}*/}\r\n                                       {/*onChange={this.changeEmail} type=\"text\" required name=\"email\"*/}\r\n                                       {/*placeholder=\"Email\"/>*/}\r\n                            {/*</div>*/}\r\n                            {/*<div className=\"form-group\">*/}\r\n                                {/*<input className=\"form-control no-border\" value={this.state.password}*/}\r\n                                       {/*onChange={this.changePassword} type=\"password\" required name=\"password\"*/}\r\n                                       {/*placeholder=\"Password\"/>*/}\r\n                            {/*</div>*/}\r\n                            {/*<div className=\"form-group\">*/}\r\n                                {/*<input className=\"form-control no-border\" value={this.state.confirmPassword}*/}\r\n                                       {/*onChange={this.changeConfirmPassword} onBlur={this.checkPassword} type=\"password\" required name=\"confirmPassword\"*/}\r\n                                       {/*placeholder=\"Confirm\"/>*/}\r\n                            {/*</div>*/}\r\n                            {/*<Button type=\"submit\" color=\"inverse\" className=\"auth-btn mb-3\" size=\"sm\">{this.props.isFetching ? 'Loading...' : 'Register'}</Button>*/}\r\n                            {/*<p className=\"widget-auth-info\">or sign up with</p>*/}\r\n                            {/*<div className=\"social-buttons\">*/}\r\n                                {/*<Button onClick={this.googleLogin} color=\"primary\" className=\"social-button mb-2\">*/}\r\n                                    {/*<i className=\"social-icon social-google\"/>*/}\r\n                                    {/*<p className=\"social-text\">GOOGLE</p>*/}\r\n                                {/*</Button>*/}\r\n                                {/*<Button onClick={this.microsoftLogin} color=\"success\" className=\"social-button\">*/}\r\n                                    {/*<i className=\"social-icon social-microsoft\"*/}\r\n                                       {/*style={{backgroundImage: `url(${microsoft})`}}/>*/}\r\n                                    {/*<p className=\"social-text\">MICROSOFT</p>*/}\r\n                                {/*</Button>*/}\r\n                            {/*</div>*/}\r\n                        {/*</form>*/}\r\n                        {/*<p className=\"widget-auth-info\">*/}\r\n                            {/*Already have the account? Login now!*/}\r\n                        {/*</p>*/}\r\n                        {/*<Link className=\"d-block text-center\" to=\"login\">Enter the account</Link>*/}\r\n                    {/*</Widget>*/}\r\n                </Container>\r\n                <footer className=\"auth-footer\">\r\n                {new Date().getFullYear()} &copy; Light Blue Template - React Admin Dashboard Template Made by <a href=\"https://flatlogic.com\" rel=\"noopener noreferrer\" target=\"_blank\">Flatlogic LLC</a>.                    \r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isFetching: state.register.isFetching,\r\n        errorMessage: state.register.errorMessage,\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Register));\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}