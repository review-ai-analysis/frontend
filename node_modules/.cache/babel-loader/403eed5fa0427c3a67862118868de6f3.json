{"ast":null,"code":"var CircleProgress = function CircleProgress(selector) {\n  var wrapper = document.querySelectorAll(selector);\n  Array.prototype.forEach.call(wrapper, function (wrapper, i) {\n    var wrapperWidth, wrapperHeight, percent, innerHTML, canvas, context, lineWidth, centerX, centerY, radius, newPercent, from, to, duration, start, text;\n\n    var getValues = function getValues() {\n      wrapperWidth = parseInt(window.getComputedStyle(wrapper).width);\n      wrapperHeight = wrapperWidth;\n      percent = wrapper.getAttribute('data-cp-percentage');\n      innerHTML = \"<span class=\".concat(s.percentage, \"><strong>\") + percent + '</strong> %</span><canvas class=\"circleProgressCanvas\" width=\"' + wrapperWidth * 2 + '\" height=\"' + wrapperHeight * 2 + '\"></canvas>';\n      wrapper.innerHTML = innerHTML;\n      text = document.getElementsByClassName(\"\".concat(s.percentage))[i];\n      canvas = document.getElementsByClassName('circleProgressCanvas')[i];\n      wrapper.style.height = canvas.style.width = canvas.style.height = wrapperWidth + \"px\";\n      context = canvas.getContext('2d');\n      centerX = canvas.width / 2;\n      centerY = canvas.height / 2;\n      newPercent = 0;\n      from = 0;\n      to = percent;\n      duration = 3000;\n      lineWidth = 40;\n      radius = canvas.width / 2 - lineWidth;\n      start = new Date().getTime();\n    };\n\n    function getColor(value) {\n      var hue = (value * 120).toString(10);\n      return [\"hsl(\", hue, \",100%,50%)\"].join(\"\");\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      var time = new Date().getTime() - start;\n\n      if (time <= duration) {\n        var x = easeInOutQuart(time, from, to - from, duration);\n        newPercent = x;\n        text.innerHTML = newPercent.toFixed(1);\n        text.style.color = 'white';\n        drawArc(newPercent);\n      }\n    }\n\n    function drawArc(newPercent) {\n      var circleStart = 1.5 * Math.PI;\n      var circleEnd = circleStart + newPercent / 2.5 * Math.PI;\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      context.beginPath();\n      context.arc(centerX, centerY, radius, circleStart, 4 * Math.PI, false);\n      context.lineWidth = lineWidth;\n      context.strokeStyle = 'transparent'; // #acd1e3\n\n      context.stroke();\n      context.beginPath();\n      context.arc(centerX, centerY, radius, circleStart, circleEnd, false);\n      context.lineWidth = lineWidth;\n      context.strokeStyle = getColor(newPercent < 1 ? 0 : (newPercent - 1) / 4);\n      context.stroke();\n    }\n\n    var update = function update() {\n      getValues();\n      animate();\n    };\n\n    update();\n    var resizeTimer;\n    window.addEventListener(\"resize\", function () {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(function () {\n        clearTimeout(resizeTimer);\n        start = new Date().getTime();\n        update();\n      }, 250);\n    });\n  });\n\n  function easeInOutQuart(t, b, c, d) {\n    if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n};\n\nexport default CircleProgress;","map":{"version":3,"sources":["C:/Users/Vladislav/Desktop/SmartCitySirius/site/src/components/CircleProgress/CircleProgress.js"],"names":["CircleProgress","selector","wrapper","document","querySelectorAll","Array","prototype","forEach","call","i","wrapperWidth","wrapperHeight","percent","innerHTML","canvas","context","lineWidth","centerX","centerY","radius","newPercent","from","to","duration","start","text","getValues","parseInt","window","getComputedStyle","width","getAttribute","s","percentage","getElementsByClassName","style","height","getContext","Date","getTime","getColor","value","hue","toString","join","animate","requestAnimationFrame","time","x","easeInOutQuart","toFixed","color","drawArc","circleStart","Math","PI","circleEnd","clearRect","beginPath","arc","strokeStyle","stroke","update","resizeTimer","addEventListener","clearTimeout","setTimeout","t","b","c","d"],"mappings":"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","sourcesContent":["let CircleProgress = (function(selector) {\r\n    let wrapper = document.querySelectorAll(selector);\r\n    Array.prototype.forEach.call(wrapper, function(wrapper, i) {\r\n        let wrapperWidth,\r\n            wrapperHeight,\r\n            percent,\r\n            innerHTML,\r\n            canvas,\r\n            context,\r\n            lineWidth,\r\n            centerX,\r\n            centerY,\r\n            radius,\r\n            newPercent,\r\n            from,\r\n            to,\r\n            duration,\r\n            start,\r\n            text;\r\n\r\n        let getValues = function() {\r\n            wrapperWidth = parseInt(window.getComputedStyle(wrapper).width);\r\n            wrapperHeight = wrapperWidth;\r\n            percent = wrapper.getAttribute('data-cp-percentage');\r\n            innerHTML = `<span class=${s.percentage}><strong>` + \r\n                        percent + '</strong> %</span><canvas class=\"circleProgressCanvas\" width=\"' + \r\n                        (wrapperWidth * 2) + '\" height=\"' + wrapperHeight * 2 + '\"></canvas>';\r\n            wrapper.innerHTML = innerHTML;\r\n            text = document.getElementsByClassName(`${s.percentage}`)[i]\r\n            canvas = document.getElementsByClassName('circleProgressCanvas')[i]\r\n            wrapper.style.height = canvas.style.width = canvas.style.height = wrapperWidth + \"px\";\r\n            context = canvas.getContext('2d');\r\n            centerX = canvas.width / 2;\r\n            centerY = canvas.height / 2;\r\n            newPercent = 0;\r\n            from = 0;\r\n            to = percent;\r\n            duration = 3000;\r\n            lineWidth = 40;\r\n            radius = canvas.width / 2 - lineWidth;\r\n            start = new Date().getTime();\r\n        };\r\n\r\n        function getColor(value) {\r\n            var hue = (value * 120).toString(10);\r\n            return [\"hsl(\", hue, \",100%,50%)\"].join(\"\");\r\n        }\r\n\r\n        function animate() {\r\n            requestAnimationFrame(animate);\r\n            let time = new Date().getTime() - start;\r\n            if (time <= duration) {\r\n                let x = easeInOutQuart(time, from, to - from, duration);\r\n                newPercent = x;\r\n                text.innerHTML = newPercent.toFixed(1);\r\n                text.style.color = 'white';\r\n                drawArc(newPercent);\r\n            }\r\n        }\r\n\r\n        function drawArc(newPercent) {\r\n            let circleStart = 1.5 * Math.PI;\r\n            let circleEnd = circleStart + (newPercent / 2.5) * Math.PI;\r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n            context.beginPath();\r\n            context.arc(centerX, centerY, radius, circleStart, 4 * Math.PI, false);\r\n            context.lineWidth = lineWidth;\r\n            context.strokeStyle = 'transparent'; // #acd1e3\r\n            context.stroke();\r\n            context.beginPath();\r\n            context.arc(centerX, centerY, radius, circleStart, circleEnd, false);\r\n            context.lineWidth = lineWidth;\r\n            context.strokeStyle = getColor((newPercent < 1) ? 0 : ((newPercent - 1) / 4));\r\n            context.stroke();\r\n        }\r\n\r\n        let update = function() {\r\n            getValues();\r\n            animate();\r\n        }\r\n        update();\r\n\r\n        let resizeTimer;\r\n        window.addEventListener(\"resize\", function() {\r\n            clearTimeout(resizeTimer);\r\n            resizeTimer = setTimeout(function() {\r\n                clearTimeout(resizeTimer);\r\n                start = new Date().getTime();\r\n                update();\r\n            }, 250);\r\n        });\r\n    });\r\n\r\n    function easeInOutQuart(t, b, c, d) {\r\n        if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\r\n        return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n    }\r\n});\r\n\r\nexport default CircleProgress;"]},"metadata":{},"sourceType":"module"}