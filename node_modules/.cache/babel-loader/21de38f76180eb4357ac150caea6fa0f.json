{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\src\\\\pages\\\\dashboard\\\\components\\\\rickshaw\\\\Rickshaw.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Rickshaw from 'rickshaw';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nvar RickshawGraph = /*#__PURE__*/function (_React$Component) {\n  _inherits(RickshawGraph, _React$Component);\n\n  var _super = _createSuper(RickshawGraph);\n\n  function RickshawGraph(props) {\n    var _this;\n\n    _classCallCheck(this, RickshawGraph);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      graph: null\n    };\n    _this.initRickshaw = _this.initRickshaw.bind(_assertThisInitialized(_this));\n    _this.onResizeRickshaw = _this.onResizeRickshaw.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RickshawGraph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initRickshaw();\n      window.addEventListener('resize', this.onResizeRickshaw);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.sidebarVisibility !== prevProps.sidebarVisibility) {\n        this.onResizeRickshaw();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.onResizeRickshaw);\n    }\n  }, {\n    key: \"onResizeRickshaw\",\n    value: function onResizeRickshaw() {\n      this.state.graph.configure({\n        height: this.props.height\n      });\n      this.state.graph.render();\n    }\n  }, {\n    key: \"initRickshaw\",\n    value: function initRickshaw() {\n      var _this2 = this;\n\n      var seriesData = [[], []];\n      var random = new Rickshaw.Fixtures.RandomData(30);\n\n      for (var i = 0; i < 30; i += 1) {\n        random.addData(seriesData);\n      } // eslint-disable-next-line\n\n\n      this.state.graph = new Rickshaw.Graph({\n        element: this.rickshawChart,\n        height: this.props.height,\n        series: [{\n          color: '#2477FF',\n          data: seriesData[0],\n          name: 'Uploads'\n        }, {\n          color: '#2D8515',\n          data: seriesData[1],\n          name: 'Downloads'\n        }]\n      });\n      var hoverDetail = new Rickshaw.Graph.HoverDetail({\n        graph: this.state.graph,\n        xFormatter: function xFormatter(x) {\n          return new Date(x * 1000).toString();\n        }\n      });\n      hoverDetail.show();\n      setInterval(function () {\n        random.removeData(seriesData);\n        random.addData(seriesData);\n\n        _this2.state.graph.update();\n      }, 1000);\n      this.state.graph.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(r) {\n          _this3.rickshawChart = r;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return RickshawGraph;\n}(React.Component);\n\n_defineProperty(RickshawGraph, \"propTypes\", {\n  height: PropTypes.number\n});\n\n_defineProperty(RickshawGraph, \"defaultProps\", {\n  height: 100\n});\n\nfunction mapStateToProps(store) {\n  return {\n    sidebarVisibility: store.navigation.sidebarVisibility\n  };\n}\n\nexport default connect(mapStateToProps)(RickshawGraph);","map":{"version":3,"sources":["C:/Users/Vladislav/Desktop/SmartCitySirius/site/src/pages/dashboard/components/rickshaw/Rickshaw.js"],"names":["React","Rickshaw","PropTypes","connect","RickshawGraph","props","state","graph","initRickshaw","bind","onResizeRickshaw","window","addEventListener","prevProps","sidebarVisibility","removeEventListener","configure","height","render","seriesData","random","Fixtures","RandomData","i","addData","Graph","element","rickshawChart","series","color","data","name","hoverDetail","HoverDetail","xFormatter","x","Date","toString","show","setInterval","removeData","update","r","Component","number","mapStateToProps","store","navigation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Rickshaw from 'rickshaw';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass RickshawGraph extends React.Component {\r\n\r\n  static propTypes = {\r\n    height: PropTypes.number,\r\n  };\r\n\r\n  static defaultProps = {\r\n    height: 100,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      graph: null,\r\n    };\r\n    this.initRickshaw = this.initRickshaw.bind(this);\r\n    this.onResizeRickshaw = this.onResizeRickshaw.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initRickshaw();\r\n    window.addEventListener('resize', this.onResizeRickshaw);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.sidebarVisibility !== prevProps.sidebarVisibility) {\r\n      this.onResizeRickshaw()\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.onResizeRickshaw);\r\n  }\r\n\r\n  onResizeRickshaw() {\r\n    this.state.graph.configure({ height: this.props.height });\r\n    this.state.graph.render();\r\n  }\r\n\r\n  initRickshaw() {\r\n    const seriesData = [[], []];\r\n    const random = new Rickshaw.Fixtures.RandomData(30);\r\n    for (let i = 0; i < 30; i += 1) {\r\n      random.addData(seriesData);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    this.state.graph = new Rickshaw.Graph({\r\n      element: this.rickshawChart,\r\n      height: this.props.height,\r\n      series: [\r\n        {\r\n          color: '#2477FF',\r\n          data: seriesData[0],\r\n          name: 'Uploads',\r\n        }, {\r\n          color: '#2D8515',\r\n          data: seriesData[1],\r\n          name: 'Downloads',\r\n        },\r\n      ],\r\n    });\r\n\r\n    const hoverDetail = new Rickshaw.Graph.HoverDetail({\r\n      graph: this.state.graph,\r\n      xFormatter: x => new Date(x * 1000).toString(),\r\n    });\r\n\r\n    hoverDetail.show();\r\n\r\n    setInterval(() => {\r\n      random.removeData(seriesData);\r\n      random.addData(seriesData);\r\n      this.state.graph.update();\r\n    }, 1000);\r\n\r\n    this.state.graph.render();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        ref={(r) => {\r\n          this.rickshawChart = r;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(store) {\r\n  return {\r\n    sidebarVisibility: store.navigation.sidebarVisibility,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(RickshawGraph);"]},"metadata":{},"sourceType":"module"}