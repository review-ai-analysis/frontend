{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vladislav\\\\Desktop\\\\SmartCitySirius\\\\site\\\\src\\\\components\\\\Widget\\\\Widget.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport s from './Widget.module.scss';\nimport classNames from 'classnames';\nimport Loader from '../Loader'; // eslint-disable-line css-modules/no-unused-class\n\nimport AnimateHeight from 'react-animate-height';\nimport uuidv4 from 'uuid/v4';\nimport { DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar Widget = /*#__PURE__*/function (_React$Component) {\n  _inherits(Widget, _React$Component);\n\n  var _super = _createSuper(Widget);\n\n  function Widget(props) {\n    var _this;\n\n    _classCallCheck(this, Widget);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleModal\", function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        hideWidget: !_this.state.hideWidget\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCollapse\", function () {\n      var heightValue = _this.state.collapseWidget ? 'auto' : 0;\n\n      _this.setState({\n        height: heightValue,\n        collapseWidget: !_this.state.collapseWidget,\n        reloading: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeWithModal\", function () {\n      _this.toggleModal();\n\n      _this.handleClose();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleExpand\", function () {\n      _this.setState({\n        height: 'auto',\n        collapseWidget: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleReload\", function () {\n      var _this$props = _this.props,\n          widgetType = _this$props.widgetType,\n          updateWidgetData = _this$props.updateWidgetData;\n      var type = widgetType;\n\n      if (type) {\n        updateWidgetData(type);\n      }\n\n      _this.setState({\n        reloading: true\n      });\n\n      var endpoint = false;\n\n      if (!endpoint) {\n        setTimeout(function () {\n          return _this.setState({\n            reloading: false\n          });\n        }, 2000);\n      } else {\n        _this.setState({\n          reloading: true\n        });\n\n        fetch('https://yourapi.com').then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          return _this.setState({\n            apiData: json.title\n          });\n        }).then(setTimeout(function () {\n          return _this.setState({\n            reloading: false\n          });\n        }, 1000));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFullscreen\", function () {\n      _this.setState({\n        fullscreened: !_this.state.fullscreened\n      });\n    });\n\n    _this.state = {\n      randomId: uuidv4(),\n      hideWidget: false,\n      collapseWidget: !!props.collapsed,\n      height: props.collapsed ? 0 : 'auto',\n      fullscreened: false,\n      reloading: false,\n      modal: false,\n      apiData: ''\n    };\n    return _this;\n  }\n\n  _createClass(Widget, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          title = _this$props2.title,\n          className = _this$props2.className,\n          children = _this$props2.children,\n          close = _this$props2.close,\n          fullscreen = _this$props2.fullscreen,\n          collapse = _this$props2.collapse,\n          refresh = _this$props2.refresh,\n          settings = _this$props2.settings,\n          settingsInverse = _this$props2.settingsInverse,\n          tooltipPlacement = _this$props2.tooltipPlacement,\n          showTooltip = _this$props2.showTooltip,\n          bodyClass = _this$props2.bodyClass,\n          customControls = _this$props2.customControls,\n          customClose = _this$props2.customClose,\n          customExpand = _this$props2.customExpand,\n          customCollapse = _this$props2.customCollapse,\n          customFullscreen = _this$props2.customFullscreen,\n          customReload = _this$props2.customReload,\n          fetchingData = _this$props2.fetchingData,\n          customDropDown = _this$props2.customDropDown,\n          customBody = _this$props2.customBody,\n          prompt = _this$props2.prompt,\n          collapsed = _this$props2.collapsed,\n          widgetType = _this$props2.widgetType,\n          updateWidgetData = _this$props2.updateWidgetData,\n          options = _this$props2.options,\n          attributes = _objectWithoutProperties(_this$props2, [\"title\", \"className\", \"children\", \"close\", \"fullscreen\", \"collapse\", \"refresh\", \"settings\", \"settingsInverse\", \"tooltipPlacement\", \"showTooltip\", \"bodyClass\", \"customControls\", \"customClose\", \"customExpand\", \"customCollapse\", \"customFullscreen\", \"customReload\", \"fetchingData\", \"customDropDown\", \"customBody\", \"prompt\", \"collapsed\", \"widgetType\", \"updateWidgetData\", \"options\"]);\n\n      var mainControls = !!(close || fullscreen || collapse || refresh || settings || settingsInverse);\n      var _this$state = this.state,\n          reloading = _this$state.reloading,\n          fullscreened = _this$state.fullscreened,\n          randomId = _this$state.randomId,\n          height = _this$state.height,\n          hideWidget = _this$state.hideWidget,\n          collapseWidget = _this$state.collapseWidget,\n          modal = _this$state.modal;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"section\", Object.assign({\n        style: {\n          display: hideWidget ? 'none' : ''\n        },\n        className: classNames('widget', {\n          'fullscreened': !!fullscreened,\n          'collapsed': !!collapseWidget\n        }, s.widget, className, reloading || fetchingData ? s.reloading : '')\n      }, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }\n      }), title && (typeof title === 'string' ? /*#__PURE__*/React.createElement(\"h5\", {\n        className: s.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }, title) : /*#__PURE__*/React.createElement(\"header\", {\n        className: s.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, title)), !customControls && mainControls && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(s.widgetControls, \" widget-controls\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }, settings && /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"la la-cog\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }\n      })), settingsInverse && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"bg-gray-transparent \".concat(s.inverse),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"la la-cog text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 72\n        }\n      })), refresh && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleReload,\n        id: \"reloadId-\".concat(randomId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, typeof refresh === 'string' ? /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"text-gray-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      }, refresh) : /*#__PURE__*/React.createElement(\"i\", {\n        className: \"la la-refresh\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }), showTooltip && /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n        placement: tooltipPlacement,\n        target: \"reloadId-\".concat(randomId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }\n      }, \"Reload\")), fullscreen && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleFullscreen,\n        id: \"fullscreenId-\".concat(randomId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"glyphicon glyphicon-resize-\".concat(fullscreened ? 'small' : 'full'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 19\n        }\n      }), showTooltip && /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n        placement: tooltipPlacement,\n        target: \"fullscreenId-\".concat(randomId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }, \"Fullscreen\")), !fullscreened && collapse && /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleCollapse,\n        id: \"collapseId-\".concat(randomId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"la la-angle-\".concat(!collapseWidget ? 'down' : 'up'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }\n      }), showTooltip && /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n        placement: tooltipPlacement,\n        target: \"collapseId-\".concat(randomId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }\n      }, \"Collapse\"))), !fullscreened && (close && !prompt ? /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleClose,\n        id: \"closeId-\".concat(randomId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }\n      }, typeof close === 'string' ? /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"text-gray-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }\n      }, close) : /*#__PURE__*/React.createElement(\"i\", {\n        className: \"la la-remove\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }\n      }), showTooltip && /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n        placement: tooltipPlacement,\n        target: \"closeId-\".concat(randomId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }\n      }, \"Close\")) : /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleModal,\n        id: \"closeId-\".concat(randomId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }\n      }, typeof close === 'string' ? /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"text-gray-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 19\n        }\n      }, close) : /*#__PURE__*/React.createElement(\"i\", {\n        className: \"la la-remove\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 19\n        }\n      }), showTooltip && /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n        placement: tooltipPlacement,\n        target: \"closeId-\".concat(randomId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 19\n        }\n      }, \"Modal\")))), customDropDown && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(s.widgetControls, \" widget-controls\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        tag: \"span\",\n        \"data-toggle\": \"dropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"glyphicon glyphicon-cog\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(DropdownMenu, {\n        className: \"bg-widget-transparent\",\n        right: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DropdownItem, {\n        onClick: this.handleReload,\n        title: \"Reload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 17\n        }\n      }, \"Reload \\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"badge badge-pill badge-success animate__animated animate__bounceIn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }\n      }, \"9\"))), /*#__PURE__*/React.createElement(DropdownItem, {\n        onClick: this.handleFullscreen,\n        title: !fullscreened ? \"Full Screen\" : \"Restore\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 17\n        }\n      }, !fullscreened ? \"Fullscreen\" : \"Restore\", \" \"), /*#__PURE__*/React.createElement(DropdownItem, {\n        divider: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 17\n        }\n      }), !fullscreened && (!prompt ? /*#__PURE__*/React.createElement(DropdownItem, {\n        onClick: this.handleClose,\n        title: \"Close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 46\n        }\n      }, \"Close\") : /*#__PURE__*/React.createElement(DropdownItem, {\n        onClick: this.toggleModal,\n        title: \"Close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 19\n        }\n      }, \"Close\"))))), customControls && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(s.widgetControls, \" widget-controls\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }\n      }, !fullscreened && (customClose && !prompt ? /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleClose,\n        id: \"closeId-\".concat(randomId),\n        className: s.customControlItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        title: \"Close\",\n        className: \"glyphicon glyphicon-remove\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 111\n        }\n      })) : /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleModal,\n        id: \"closeId-\".concat(randomId),\n        className: s.customControlItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        title: \"Close\",\n        className: \"glyphicon glyphicon-remove\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 113\n        }\n      }))), !fullscreened && customCollapse && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleCollapse,\n        id: \"closeId-\".concat(randomId),\n        className: s.customControlItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        title: \"Collapse\",\n        className: \"glyphicon glyphicon-chevron-\".concat(!collapseWidget ? 'down' : 'up'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 116\n        }\n      })), customFullscreen && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleFullscreen,\n        id: \"closeId-\".concat(randomId),\n        className: s.customControlItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        title: \"Fullscreen\",\n        className: \"glyphicon glyphicon-resize-\".concat(fullscreened ? 'small' : 'full'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 118\n        }\n      })), customReload && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleReload,\n        id: \"closeId-\".concat(randomId),\n        className: s.customControlItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        title: \"I am spinning!\",\n        className: \"fa fa-refresh\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 114\n        }\n      }))), /*#__PURE__*/React.createElement(AnimateHeight, {\n        duration: 500,\n        height: height,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(s.widgetBody, \" widget-body \").concat(bodyClass),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }\n      }, reloading || fetchingData ? /*#__PURE__*/React.createElement(Loader, {\n        className: s.widgetLoader,\n        size: 40,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 43\n        }\n      }) : customBody ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"jumbotron handle bg-default text-white mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 19\n        }\n      }, \"Draggable story!\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"lead\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }\n      }, \"Build\"), \" your own interfaces! Sit back and relax.\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleFullscreen,\n        className: \"btn btn-danger btn-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }\n      }, !fullscreened ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }\n      }, \"Fullscreen me! \\xA0\", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 27\n        }\n      })) : 'Go Back')))) : children))), prompt && /*#__PURE__*/React.createElement(Modal, {\n        isOpen: modal,\n        toggle: this.toggleModal,\n        id: \"news-close-modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.toggleModal,\n        id: \"news-close-modal-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 9\n        }\n      }, \"Sure?\"), /*#__PURE__*/React.createElement(ModalBody, {\n        className: \"bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 9\n        }\n      }, \"Do you really want to unrevertably remove this super news widget?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"default\",\n        onClick: this.toggleModal,\n        \"data-dismiss\": \"modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }\n      }, \"No\"), ' ', /*#__PURE__*/React.createElement(Button, {\n        color: \"danger\",\n        onClick: this.closeWithModal,\n        id: \"news-widget-remove\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }\n      }, \"Yes, remove widget\"))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: fullscreened ? 'block' : 'none'\n        },\n        className: s.widgetBackground,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Widget;\n}(React.Component);\n\n_defineProperty(Widget, \"propTypes\", {\n  title: PropTypes.node,\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  close: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  fullscreen: PropTypes.bool,\n  collapse: PropTypes.bool,\n  refresh: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  settings: PropTypes.bool,\n  settingsInverse: PropTypes.bool,\n  tooltipPlacement: PropTypes.string,\n  showTooltip: PropTypes.bool,\n  bodyClass: PropTypes.string,\n  customControls: PropTypes.bool,\n  options: PropTypes.object,\n  //eslint-disable-line,\n  fetchingData: PropTypes.bool\n});\n\n_defineProperty(Widget, \"defaultProps\", {\n  title: null,\n  className: '',\n  children: [],\n  close: false,\n  fullscreen: false,\n  collapse: false,\n  refresh: false,\n  settings: false,\n  settingsInverse: false,\n  tooltipPlacement: 'bottom',\n  showTooltip: false,\n  bodyClass: '',\n  customControls: false,\n  customClose: null,\n  customExpand: null,\n  customCollapse: null,\n  customFullscreen: null,\n  customReload: null,\n  customDropDown: null,\n  prompt: false,\n  collapsed: false,\n  options: {},\n  fetchingData: false,\n  widgetType: \"\"\n});\n\nexport default Widget;","map":{"version":3,"sources":["C:/Users/Vladislav/Desktop/SmartCitySirius/site/src/components/Widget/Widget.js"],"names":["React","PropTypes","UncontrolledTooltip","s","classNames","Loader","AnimateHeight","uuidv4","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","Button","Modal","ModalHeader","ModalBody","ModalFooter","Widget","props","setState","modal","state","hideWidget","heightValue","collapseWidget","height","reloading","toggleModal","handleClose","widgetType","updateWidgetData","type","endpoint","setTimeout","fetch","then","response","json","apiData","title","fullscreened","randomId","collapsed","className","children","close","fullscreen","collapse","refresh","settings","settingsInverse","tooltipPlacement","showTooltip","bodyClass","customControls","customClose","customExpand","customCollapse","customFullscreen","customReload","fetchingData","customDropDown","customBody","prompt","options","attributes","mainControls","display","widget","widgetControls","inverse","handleReload","handleFullscreen","handleCollapse","customControlItem","widgetBody","widgetLoader","closeWithModal","widgetBackground","Component","node","string","oneOfType","arrayOf","bool","object"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { UncontrolledTooltip } from 'reactstrap';\r\nimport s from './Widget.module.scss';\r\nimport classNames from 'classnames';\r\nimport Loader from '../Loader'; // eslint-disable-line css-modules/no-unused-class\r\nimport AnimateHeight from 'react-animate-height';\r\nimport uuidv4 from 'uuid/v4'\r\nimport {\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from 'reactstrap';\r\n\r\nclass Widget extends React.Component {\r\n  static propTypes = {\r\n    title: PropTypes.node,\r\n    className: PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.arrayOf(PropTypes.node),\r\n      PropTypes.node,\r\n    ]),\r\n    close: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    fullscreen: PropTypes.bool,\r\n    collapse: PropTypes.bool,\r\n    refresh: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    settings: PropTypes.bool,\r\n    settingsInverse: PropTypes.bool,\r\n    tooltipPlacement: PropTypes.string,\r\n    showTooltip: PropTypes.bool,\r\n    bodyClass: PropTypes.string,\r\n    customControls: PropTypes.bool,\r\n    options: PropTypes.object, //eslint-disable-line,\r\n    fetchingData: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    title: null,\r\n    className: '',\r\n    children: [],\r\n    close: false,\r\n    fullscreen: false,\r\n    collapse: false,\r\n    refresh: false,\r\n    settings: false,\r\n    settingsInverse: false,\r\n    tooltipPlacement: 'bottom',\r\n    showTooltip: false,\r\n    bodyClass: '',\r\n    customControls: false,\r\n    customClose: null,\r\n    customExpand: null,\r\n    customCollapse: null,\r\n    customFullscreen: null,\r\n    customReload: null,\r\n    customDropDown: null,\r\n    prompt: false,\r\n    collapsed: false,\r\n    options: {},\r\n    fetchingData: false,\r\n    widgetType: \"\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      randomId: uuidv4(),\r\n      hideWidget: false,\r\n      collapseWidget: !!props.collapsed,\r\n      height:  props.collapsed ? 0 : 'auto',\r\n      fullscreened: false,\r\n      reloading: false,\r\n      modal: false,\r\n      apiData: ''\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  toggleModal = () => {\r\n    this.setState({ modal: !this.state.modal });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ hideWidget: !this.state.hideWidget})\r\n  }\r\n\r\n  handleCollapse = () => {\r\n    let heightValue = this.state.collapseWidget ? 'auto' : 0\r\n    this.setState({\r\n      height: heightValue,\r\n      collapseWidget: !this.state.collapseWidget,\r\n      reloading: false\r\n    });\r\n\r\n  };\r\n\r\n  closeWithModal = () => {\r\n    this.toggleModal();\r\n    this.handleClose();\r\n  }\r\n\r\n  handleExpand = () => {\r\n\r\n    this.setState({\r\n      height: 'auto',\r\n      collapseWidget: false\r\n    });\r\n\r\n  };\r\n\r\n  handleReload = () => {\r\n    const { widgetType, updateWidgetData } = this.props;\r\n    const type = widgetType;\r\n    if(type) {\r\n      updateWidgetData(type)\r\n    }\r\n    this.setState({ reloading: true });\r\n    let endpoint = false;\r\n    if(!endpoint) {\r\n      setTimeout(() => this.setState({ reloading: false }),2000);\r\n    } else {\r\n      this.setState({ reloading: true });\r\n      fetch('https://yourapi.com')\r\n        .then(response => response.json())\r\n        .then(json => this.setState({ apiData: json.title}))\r\n        .then(setTimeout(() => this.setState({ reloading: false }), 1000))\r\n    }\r\n  }\r\n\r\n  handleFullscreen = () => {\r\n    this.setState({ fullscreened: !this.state.fullscreened });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      title,\r\n      className,\r\n      children,\r\n      close,\r\n      fullscreen,\r\n      collapse,\r\n      refresh,\r\n      settings,\r\n      settingsInverse,\r\n      tooltipPlacement,\r\n      showTooltip,\r\n      bodyClass,\r\n      customControls,\r\n      customClose,\r\n      customExpand,\r\n      customCollapse,\r\n      customFullscreen,\r\n      customReload,\r\n      fetchingData,\r\n      customDropDown,\r\n      customBody,\r\n      prompt,\r\n      collapsed,\r\n      widgetType,\r\n      updateWidgetData,\r\n      options, //eslint-disable-line\r\n      ...attributes\r\n    } = this.props;\r\n    const mainControls = !!(close || fullscreen || collapse || refresh || settings || settingsInverse);\r\n\r\n    const {\r\n      reloading,\r\n      fullscreened,\r\n      randomId,\r\n      height,\r\n      hideWidget,\r\n      collapseWidget,\r\n      modal,\r\n    } = this.state;\r\n\r\n\r\n\r\n    return (\r\n    <React.Fragment>\r\n      <section\r\n        style={{display: hideWidget ? 'none' : ''}}\r\n        className={\r\n          classNames('widget', {'fullscreened' : !!fullscreened, 'collapsed' : !!collapseWidget}, s.widget, className, (reloading || fetchingData) ? s.reloading : '')\r\n        } {...attributes}\r\n        >\r\n        {\r\n          title && (\r\n            typeof title === 'string'\r\n              ? <h5 className={s.title}>{title}</h5>\r\n              : <header className={s.title}>{title}</header>\r\n          )\r\n        }\r\n\r\n        {\r\n          !customControls && mainControls && (\r\n            <div className={`${s.widgetControls} widget-controls`}>\r\n              {settings && (\r\n                <button><i className=\"la la-cog\" /></button>\r\n              )}\r\n              {settingsInverse && (\r\n                <button className={`bg-gray-transparent ${s.inverse}`}><i\r\n                  className=\"la la-cog text-white\"\r\n                /></button>\r\n              )}\r\n              {refresh && (\r\n                <button onClick={this.handleReload} id={`reloadId-${randomId}`}>\r\n                  {typeof refresh === 'string' ?\r\n                    <strong className=\"text-gray-light\">{refresh}</strong> :\r\n                    <i className=\"la la-refresh\" />}\r\n                  {showTooltip && (\r\n                    <UncontrolledTooltip\r\n                      placement={tooltipPlacement}\r\n                      target={`reloadId-${randomId}`}\r\n                    >Reload</UncontrolledTooltip>\r\n                  )}\r\n                </button>\r\n              )}\r\n              {fullscreen && (\r\n                <button onClick={this.handleFullscreen} id={`fullscreenId-${randomId}`}>\r\n                  <i className={`glyphicon glyphicon-resize-${fullscreened ? 'small' : 'full'}`} />\r\n                  {showTooltip && (\r\n                    <UncontrolledTooltip\r\n                      placement={tooltipPlacement}\r\n                      target={`fullscreenId-${randomId}`}\r\n                    >Fullscreen</UncontrolledTooltip>\r\n                  )}\r\n                </button>\r\n              )}\r\n              {!fullscreened &&\r\n                collapse && (\r\n                  <span>\r\n                    <button onClick={this.handleCollapse} id={`collapseId-${randomId}`}>\r\n                    <i className={`la la-angle-${!collapseWidget ? 'down' : 'up'}`} />\r\n                      {showTooltip && (\r\n                        <UncontrolledTooltip\r\n                          placement={tooltipPlacement}\r\n                          target={`collapseId-${randomId}`}\r\n                        >Collapse</UncontrolledTooltip>\r\n                      )}\r\n                    </button>\r\n                  </span>\r\n                )\r\n              }\r\n              {!fullscreened && (\r\n                (close && !prompt) ? (\r\n                <button onClick={this.handleClose} id={`closeId-${randomId}`}>\r\n                  {typeof close === 'string' ?\r\n                    <strong className=\"text-gray-light\">{close}</strong> :\r\n                    <i className=\"la la-remove\" />}\r\n                  {showTooltip && (\r\n                    <UncontrolledTooltip\r\n                      placement={tooltipPlacement}\r\n                      target={`closeId-${randomId}`}\r\n                    >Close</UncontrolledTooltip>\r\n                  )}\r\n                </button>\r\n              ) : (\r\n                <button onClick={this.toggleModal} id={`closeId-${randomId}`}>\r\n                {typeof close === 'string' ?\r\n                  <strong className=\"text-gray-light\">{close}</strong> :\r\n                  <i className=\"la la-remove\" />}\r\n                {showTooltip && (\r\n                  <UncontrolledTooltip\r\n                    placement={tooltipPlacement}\r\n                    target={`closeId-${randomId}`}\r\n                  >Modal</UncontrolledTooltip>\r\n                )}\r\n              </button>\r\n              ))}\r\n            </div>\r\n          )}\r\n          {customDropDown && (\r\n            <div className={`${s.widgetControls} widget-controls`}>\r\n            <UncontrolledDropdown>\r\n              <DropdownToggle\r\n                tag=\"span\"\r\n                data-toggle=\"dropdown\"\r\n\r\n              >\r\n                <i className=\"glyphicon glyphicon-cog\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"bg-widget-transparent\" right>\r\n                <DropdownItem onClick={this.handleReload} title=\"Reload\">\r\n                  Reload &nbsp;&nbsp;\r\n                  <span className=\"badge badge-pill badge-success animate__animated animate__bounceIn\">\r\n                    <strong>9</strong>\r\n                  </span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem onClick={this.handleFullscreen} title={!fullscreened ? \"Full Screen\" : \"Restore\"}>{!fullscreened ? \"Fullscreen\" : \"Restore\"} </DropdownItem>\r\n                <DropdownItem divider />\r\n                {!fullscreened && (!prompt ? <DropdownItem onClick={this.handleClose} title=\"Close\">Close</DropdownItem>\r\n                : <DropdownItem onClick={this.toggleModal} title=\"Close\">Close</DropdownItem>)}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            </div>\r\n          )}\r\n        {\r\n          customControls && (\r\n            <div className={`${s.widgetControls} widget-controls`}>\r\n              {!fullscreened && ((customClose && !prompt) ? (\r\n                <button onClick={this.handleClose} id={`closeId-${randomId}`} className={s.customControlItem}><i title=\"Close\" className=\"glyphicon glyphicon-remove\"/></button>\r\n              ) : (\r\n                  <button onClick={this.toggleModal} id={`closeId-${randomId}`} className={s.customControlItem}><i title=\"Close\" className=\"glyphicon glyphicon-remove\"/></button>\r\n              ))}\r\n              {!fullscreened && (customCollapse && (\r\n                  <button onClick={this.handleCollapse} id={`closeId-${randomId}`} className={s.customControlItem}><i title=\"Collapse\" className={`glyphicon glyphicon-chevron-${!collapseWidget ? 'down' : 'up'}`}/></button>\r\n              ))}\r\n              {customFullscreen && (\r\n                  <button onClick={this.handleFullscreen} id={`closeId-${randomId}`} className={s.customControlItem}><i title=\"Fullscreen\" className={`glyphicon glyphicon-resize-${fullscreened ? 'small' : 'full'}`} /></button>\r\n              )}\r\n              {customReload && (\r\n                  <button onClick={this.handleReload} id={`closeId-${randomId}`} className={s.customControlItem}><i title=\"I am spinning!\" className=\"fa fa-refresh\" /></button>\r\n              )}\r\n            </div>\r\n          )\r\n        }\r\n        <AnimateHeight\r\n          duration={ 500 }\r\n          height={ height }\r\n        >\r\n\r\n          <div className={`${s.widgetBody} widget-body ${bodyClass}`}>\r\n            {reloading || fetchingData ?  <Loader className={s.widgetLoader} size={40}/> : customBody ? (\r\n                <div className=\"jumbotron handle bg-default text-white mb-0\">\r\n                <div className=\"container\">\r\n                  <h1>Draggable story!</h1>\r\n                  <p className=\"lead\">\r\n                    <em>Build</em> your own\r\n                    interfaces! Sit back and relax.\r\n                  </p>\r\n                  <p className=\"text-center\">\r\n                    <button onClick={this.handleFullscreen} className=\"btn btn-danger btn-lg\">\r\n                      {!fullscreened ?\r\n                        <React.Fragment>Fullscreen me! &nbsp;\r\n                          <i className=\"fa fa-check\" />\r\n                        </React.Fragment>\r\n                        : 'Go Back'\r\n                      }\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ) : children}\r\n          </div>\r\n\r\n       </AnimateHeight>\r\n\r\n      </section>\r\n      {prompt && (\r\n        <Modal isOpen={modal} toggle={this.toggleModal} id=\"news-close-modal\">\r\n        <ModalHeader toggle={this.toggleModal} id=\"news-close-modal-label\">Sure?</ModalHeader>\r\n        <ModalBody className=\"bg-white\">\r\n          Do you really want to unrevertably remove this super news widget?\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"default\" onClick={this.toggleModal} data-dismiss=\"modal\">No</Button>{' '}\r\n          <Button color=\"danger\" onClick={this.closeWithModal} id=\"news-widget-remove\">Yes,\r\n            remove widget</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      )}\r\n      <div style={{display: fullscreened ? 'block'  : 'none'}} className={s.widgetBackground}></div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Widget;\r\n"]},"metadata":{},"sourceType":"module"}